name: 'Build and Deploy to Cloudflare Pages'
description: 'Reusable action to build and deploy the application to Cloudflare Pages'

inputs:
  cloudflare_api_token:
    description: 'Cloudflare API Token'
    required: true
  cloudflare_account_id:
    description: 'Cloudflare Account ID'
    required: true
  project_name:
    description: 'Cloudflare Pages project name'
    required: true
  branch_name:
    description: 'Branch name for deployment'
    required: true
  node_version:
    description: 'Node.js version'
    required: false
    default: '20.x'
  flutter_version:
    description: 'Flutter version'
    required: false
    default: '3.24.1'
  flutter_web_renderer:
    description: 'Flutter web renderer'
    required: false
    default: 'html'

outputs:
  deployment_url:
    description: 'Deployment URL'
    value: ${{ steps.deploy.outputs.deployment_url }}

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
        cache: 'npm'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ inputs.flutter_version }}
        channel: stable

    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Build Flutter chart component
      shell: bash
      run: |
        cd chart_app
        flutter pub get
        flutter build web --web-renderer ${{ inputs.flutter_web_renderer }} --release
        cd ..

    - name: Build application
      shell: bash
      run: npm run build:app

    - name: Prepare deployment files
      shell: bash
      run: |
        mkdir -p deploy
        cp index.html manifest.json sw.js nojs-smartcharts.css deploy/
        cp -r dist deploy/
        cp -r dist/* deploy/
        if [ -d "sass/favicons" ]; then
          mkdir -p deploy/sass
          cp -r sass/favicons deploy/sass/
        fi

    - name: Install Wrangler
      shell: bash
      run: npm install -g wrangler@3.1.0

    - name: Deploy to Cloudflare Pages
      id: deploy
      shell: bash
      run: |
        wrangler pages deploy deploy \
          --project-name=${{ inputs.project_name }} \
          --branch ${{ inputs.branch_name }} \
          --commit-dirty=true
      env:
        CLOUDFLARE_API_TOKEN: ${{ inputs.cloudflare_api_token }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.cloudflare_account_id }}
